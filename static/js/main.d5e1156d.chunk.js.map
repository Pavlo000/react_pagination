{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","perPage","total","page","onSetTotal","onPageChange","onPerPageChange","length","Math","ceil","pages","Array","from","keys","slice","fromItems","toItems","min","className","type","onClick","disabled","map","currPage","classNames","active","placeholder","onChange","event","Number","target","value","name","App","useState","selectedPage","setSelectedPage","setTotal","setPerPage","num","ReactDOM","render","document","getElementById"],"mappings":"kNAYaA,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,MACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,aACAC,EACI,EADJA,gBAEMC,EAASC,KAAKC,KAAKP,EAAQD,GAC3BS,EAAQC,MAAMC,KAAKD,MAAMJ,EAAS,GAAGM,QAAQC,MAAM,GACnDC,EAAYd,GAAWE,EAAO,GAAK,EACnCa,EAAUR,KAAKS,IAAIf,EAAOD,EAAUE,GAE1C,OACE,sBAAKe,UAAU,aAAf,UACE,uCAAQH,EAAR,cAAuBC,EAAvB,eAAqCd,KAErC,qBAAIgB,UAAU,aAAd,UACE,oBACEA,UAAU,YADZ,SAGE,wBACEA,UAAU,YACVC,KAAK,SACLC,QAAS,WACPf,EAAaF,EAAO,IAEtBkB,SAAmB,IAATlB,EANZ,oBAYDO,EAAMY,KAAI,SAAAC,GAAQ,OACjB,oBACEL,UAAWM,IACT,YACA,CACEC,OAAQF,IAAapB,IAJ3B,SASE,wBACEe,UAAU,YACVC,KAAK,SACLC,QAAS,WACPf,EAAakB,IAJjB,SAOGA,KATEA,MAcT,oBAAIL,UAAU,YAAd,SACE,wBACEA,UAAU,YACVC,KAAK,SACLC,QAAS,WACPf,EAAaF,EAAO,IAEtBkB,SAAUlB,IAASI,EANrB,uBAaJ,sBAAKW,UAAU,yBAAf,UACE,sBAAMA,UAAU,mBAAhB,oBACA,uBACEA,UAAU,eACVQ,YAAY,aACZ,mBAAiB,eACjBP,KAAK,SACLQ,SAAU,SAACC,GACTxB,EAAWyB,OAAOD,EAAME,OAAOC,QAC/B1B,EAAa,SAKnB,yBACE2B,KAAK,UACLD,MAAO9B,EACPiB,UAAU,cACVS,SAAU,SAACC,GACTvB,EAAa,GACbC,EAAgBuB,OAAOD,EAAME,OAAOC,SANxC,UASE,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,uBCxEOE,EA/BO,WACpB,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOhC,EAAP,KAAcmC,EAAd,KACA,EAA8BH,mBAAS,GAAvC,mBAAOjC,EAAP,KAAgBqC,EAAhB,KAcA,OACE,8BACE,cAAC,EAAD,CACEpC,MAAOA,EACPD,QAASA,EACTE,KAAMgC,EACN9B,aAlBe,SAACkC,GACpBH,EAAgBG,IAkBZnC,WAfa,SAACmC,GAClBF,EAASE,IAeLjC,gBAZkB,SAACiC,GACvBD,EAAWC,SCffC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d5e1156d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  page: number;\n  onPageChange:(num: number) => void;\n  onSetTotal: (num: number) => void;\n  onPerPageChange: (num: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  perPage,\n  total,\n  page,\n  onSetTotal,\n  onPageChange,\n  onPerPageChange,\n}) => {\n  const length = Math.ceil(total / perPage);\n  const pages = Array.from(Array(length + 1).keys()).slice(1);\n  const fromItems = perPage * (page - 1) + 1;\n  const toItems = Math.min(total, perPage * page);\n\n  return (\n    <div className=\"Pagination\">\n      <h1>{`${fromItems} - ${toItems} of ${total}`}</h1>\n\n      <ul className=\"pagination\">\n        <li\n          className=\"page-item\"\n        >\n          <button\n            className=\"page-link\"\n            type=\"button\"\n            onClick={() => {\n              onPageChange(page - 1);\n            }}\n            disabled={page === 1}\n          >\n            &laquo;\n          </button>\n        </li>\n\n        {pages.map(currPage => (\n          <li\n            className={classNames(\n              'page-item',\n              {\n                active: currPage === page,\n              },\n            )}\n            key={currPage}\n          >\n            <button\n              className=\"page-link\"\n              type=\"button\"\n              onClick={() => {\n                onPageChange(currPage);\n              }}\n            >\n              {currPage}\n            </button>\n          </li>\n        ))}\n\n        <li className=\"page-item\">\n          <button\n            className=\"page-link\"\n            type=\"button\"\n            onClick={() => {\n              onPageChange(page + 1);\n            }}\n            disabled={page === length}\n          >\n            &raquo;\n          </button>\n        </li>\n      </ul>\n\n      <div className=\"input-group mb-3 width\">\n        <span className=\"input-group-text\">â„–</span>\n        <input\n          className=\"form-control\"\n          placeholder=\"n-th pages\"\n          aria-describedby=\"basic-addon1\"\n          type=\"number\"\n          onChange={(event) => {\n            onSetTotal(Number(event.target.value));\n            onPageChange(1);\n          }}\n        />\n      </div>\n\n      <select\n        name=\"perPage\"\n        value={perPage}\n        className=\"form-select\"\n        onChange={(event) => {\n          onPageChange(1);\n          onPerPageChange(Number(event.target.value));\n        }}\n      >\n        <option value={3}>3</option>\n        <option value={5}>5</option>\n        <option value={10}>10</option>\n        <option value={20}>20</option>\n      </select>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nconst App: React.FC = () => {\n  const [selectedPage, setSelectedPage] = useState(1);\n  const [total, setTotal] = useState(42);\n  const [perPage, setPerPage] = useState(5);\n\n  const onPageChange = (num: number) => {\n    setSelectedPage(num);\n  };\n\n  const onSetTotal = (num: number) => {\n    setTotal(num);\n  };\n\n  const onPerPageChange = (num: number) => {\n    setPerPage(num);\n  };\n\n  return (\n    <nav>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        page={selectedPage}\n        onPageChange={onPageChange}\n        onSetTotal={onSetTotal}\n        onPerPageChange={onPerPageChange}\n      />\n    </nav>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}